name: MLflow Model Training CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  train-model:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: '3.8'
        environment-file: MLProject/conda.yaml
        activate-environment: mlflow-env
    
    - name: Install MLflow
      shell: bash -l {0}
      run: |
        conda activate mlflow-env
        pip install mlflow
        echo "‚úÖ MLflow installed successfully"
        mlflow --version
    
    - name: Verify Project Structure
      shell: bash -l {0}
      run: |
        echo "üîç Verifying project structure..."
        ls -la MLProject/
        echo "üìã MLProject file content:"
        cat MLProject/MLproject
        echo "üêç Python files:"
        ls -la MLProject/*.py
        echo "üìä Data files:"
        ls -la MLProject/*.csv || echo "No CSV files found"
    
    - name: Run MLflow Project
      shell: bash -l {0}
      run: |
        conda activate mlflow-env
        echo "üöÄ Running MLflow project..."
        cd MLProject
        
        # Run using mlflow run command with parameters
        mlflow run . \
          --experiment-name "Auto_Prediction_CI" \
          -P test_size=0.2 \
          -P random_state=42 \
          --env-manager=conda
        
        echo "‚úÖ MLflow project completed successfully!"
    
    - name: Verify MLflow Artifacts
      shell: bash -l {0}
      run: |
        echo "üìä Checking MLflow artifacts..."
        ls -la MLProject/mlruns/ || echo "‚ùå No mlruns directory found"
        if [ -d "MLProject/mlruns" ]; then
          find MLProject/mlruns -type f -name "*.txt" -o -name "*.json" -o -name "*.yaml" | head -10
          echo "‚úÖ MLflow artifacts found"
        fi
        
        # Check for training summary
        if [ -f "MLProject/training_summary.txt" ]; then
          echo "üìÑ Training Summary:"
          cat MLProject/training_summary.txt
        else
          echo "‚ùå Training summary not found"
        fi
    
    - name: Upload MLflow artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mlflow-artifacts
        path: |
          MLProject/mlruns/
          MLProject/*.csv
          MLProject/training_summary.txt
        retention-days: 30
    
    - name: Display training results
      shell: bash -l {0}
      run: |
        echo "‚úÖ Model training completed successfully!"
        echo "üìä Check the artifacts tab for MLflow tracking results"
        echo "ü§ñ CI/CD Pipeline executed with proper MLflow run command!"